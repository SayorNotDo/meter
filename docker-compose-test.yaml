services:
  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: testpassword
      POSTGRES_DB: test_postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - network

  dbmate:
    image: ghcr.io/amacneil/dbmate:latest
    environment:
      DATABASE_URL: postgresql://postgres:testpassword@db:5432/test_postgres?sslmode=disable
    volumes:
      - ./crates/db/migrations:/db/migrations
    depends_on:
      db:
        condition: service_healthy
    command: [ "up" ]
    networks:
      - network

  redis:
    image: redis:latest
    restart: unless-stopped
    environment:
      REDIS_PASSWORD: testpassword
    command: [ "redis-server", "--requirepass", "testpassword" ]
    ports:
      - "6379:6379"
    networks:
      - network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    command: [ "cargo", "test", "--", "test_user_delete", "--color=always" ]
    working_dir: /meter
    volumes:
      - ./crates:/meter/crates
      - ./settings:/meter/settings
      - ./static:/meter/static
      - ./logs:/meter/logs
    environment:
      APP_PROFILE: test
      RUST_BACKTRACE: 1
      RUST_LOG: info
    depends_on:
      db:
        condition: service_healthy
      dbmate:
        condition: service_completed_successfully
      redis:
        condition: service_started
      mailpit:
        condition: service_started
    ports:
      - "8888:80"
    networks:
      - network

  mailpit:
    image: axllent/mailpit:latest
    restart: unless-stopped
    volumes:
      - ./crates/server/tests/data:/data
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATABASE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - network

networks:
  network:
    driver: bridge

volumes:
  shared_data:
